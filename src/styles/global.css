html {
	scrollbar-gutter: stable;
	color-scheme: light dark;

	--CONTENT-WIDTH: 54rem;
	--MIN-CONTENT-PADDING: 16px;
	--MAX-CONTENT-PADDING: 3rem;
	--FONT-SIZE--SMALL: 0.8em;
	--BG-FROM:
		var(--LIGHT, oklch(0.94 0.11 175.71))
		var(--DARK, oklch(0.28 0.08 170.93));
	--BG-TO:
		var(--LIGHT, oklch(0.99 0.01 68))
		var(--DARK, oklch(0.12 0.03 86.71));
	--CONTENT-BG:
		var(--LIGHT, oklch(0.99 0.03 120.64))
		var(--DARK, oklch(0.2 0.05 219.22));
	--CONTENT-SHADOW:
		var(--LIGHT, oklch(0.43 0.2 339.3))
		var(--DARK, oklch(0.67 0.15 190.98));
	--TEXT-COLOR:
		var(--LIGHT, oklch(0.3 0.09 43.54))
		var(--DARK, oklch(0.99 0.04 106.07));

	--CODE-SHADOW: oklch(0.43 0.2 339.3);

	--PINK:
		var(--SRGB,
			var(--LIGHT, pink)
			var(--DARK, darkmagenta)
		)
		var(--OKLCH,
			var(--LIGHT, oklch(0.89 0.08 1.1))
			var(--DARK, oklch(0.45 0.2 347.15))
		);
	--GREEN:
		var(--SRGB,
			var(--LIGHT, lightgreen)
			var(--DARK, forestgreen)
		)
		var(--OKLCH,
			var(--LIGHT, oklch(0.9 0.19 155.57))
			var(--DARK, oklch(0.36 0.11 161.84))
		);

	/* Space toggles for the dark/light mode. */
	--LIGHT: initial;
	--DARK: ;

	/* Space toggles for the oklch support. */
	--SRGB: initial;
	--OKLCH: ;

	background-image: radial-gradient(
		farthest-corner circle at 50% 50%
		,
		var(--BG-FROM)
		min(0.5 * var(--CONTENT-WIDTH), 62vmin)
		,
		var(--BG-TO)
		100%
	);
	background-attachment: fixed;
	hyphens: auto;
}
@media (prefers-color-scheme: dark) {
	html {
		--LIGHT: ;
		--DARK: initial;
	}
}

@supports (color: oklch(0.89 0.2 166.25)) {
	:root {
		--SRGB: ;
		--OKLCH: initial;
	}
}

body {
	box-sizing: border-box;
	max-width: var(--CONTENT-WIDTH);
	min-height: 100vh;
	padding: var(--MIN-CONTENT-PADDING);
	--content-padding: calc(
		var(--MIN-CONTENT-PADDING)
		+
		clamp(
			0px,
			100vw - var(--CONTENT-WIDTH),
			var(--MAX-CONTENT-PADDING)
		)
	);
	--overhang: clamp(
		0px,
		var(--content-padding) - var(--MIN-CONTENT-PADDING),
		0.5em
	);
	padding-inline: var(--content-padding);
	margin: 0 auto;

	font-size: 1.5rem;
	/* https://modernfontstacks.com/ */
	font-family:
		'Iowan Old Style',
		'Palatino Linotype',
		'URW Palladio L',
		P052,
		serif;

	background: var(--CONTENT-BG);
	color: var(--TEXT-COLOR);
	box-shadow: 0 0 1rem -0.6rem var(--CONTENT-SHADOW);
}

hr {
	box-sizing: border-box;
	width: 100%;
	height: 0;
}

code {
	font: inherit;
	white-space: pre-wrap;
	tab-size: 2;
}

:not(pre) > code,
blockquote {
	font-style: italic;
}

:is(blockquote, figcaption) :is(code, em) {
	font-style: normal;
}

blockquote {
	text-wrap: balance;
}

iframe {
	border: none;
}

video {
	max-width: 100%;
}

h1, h2, h3, h4, h5, h6 {
	text-wrap: balance;
	line-height: 1.1;
}

p, li {
	line-height: 1.6;
	text-wrap: pretty;
}

li p {
	margin: 0;
}

li + li {
	margin-top: 0.25lh;
}

li:has(p) + li {
	margin-top: 0.5lh;
}

a[href] {
	padding-block: 0.1em;
	font-weight: 600; /* Slightly better contrast */

	color:
		var(--LIGHT, hsl(200deg 100% 35%))
		var(--DARK, hsl(200deg 100% 55%));

	&:visited:not(:hover, :focus-visible) {
		color:
			var(--LIGHT, hsl(270deg 35% 45%))
			var(--DARK, hsl(270deg 95% 80%));
	}
}

a[href],
summary,
u {
	text-decoration-thickness: max(1px, 0.075em);
	text-underline-offset: clamp(2px, 0.075em, 4px);
	/* https://github.com/web-platform-tests/wpt/pull/42940 */
	text-decoration-color: var(--mix);
	--mix-alpha: 0.5;
}

:is(a[href], summary):is(:hover, :focus-visible),
:is(a[href], summary):is(:hover, :focus-visible) > u {
	--mix-alpha: 1;
	/* TODO: Fill a Safari bug: with code elements */
	/* Also, with the mix working, I might not need this. */
	/* text-decoration-thickness: max(1.5px, 0.125em); */
}

summary {
	cursor: pointer;

	/* We need `<u>` inside, as otherwise some browsers won't show the text-decoration */
	& > u {
		text-decoration-style: dotted;
	}
}

summary:focus:not(:focus-visible),
:root:not(:active) label:hover,
label:active {
	-webkit-user-select: none;
	user-select: none;
}

.nou {
	white-space: nowrap;

	/* Required for Chrome */
	&::before,
	&::after {
		content: "\200b"; /* zero-width space */
	}

	/* A good case for `::content` */
	& > span {
		display: inline-block;
	}
}

a[href].is-inherited:not(:hover, :focus-visible) {
	all: unset;
	font-weight: 600;
	color: inherit;
}

[hidden] {
	display: none;
}

.is-inline-block {
	display: inline-block;
	max-width: 100%;
}

ul, ol {
	padding: 0;
	padding-inline-start: calc(
		3 * var(--MIN-CONTENT-PADDING)
		-
		var(--content-padding)
	);
}


:is(ul, ol):has(
	> li.starts-with-tag > a.has-left-overhang:first-child,
	> li.starts-with-tag > p.starts-with-tag:first-child > a.has-left-overhang:first-child
) li {
	padding-inline-start: var(--overhang);
	margin-inline-start: calc(-1 * var(--overhang));
}

li.starts-with-tag:has(
	> a.has-left-overhang:first-child,
	> p.starts-with-tag:first-child > a.has-left-overhang:first-child
) {
	& > a.has-left-overhang:first-child,
	& > p.starts-with-tag:first-child > a.has-left-overhang:first-child {
		margin-inline-start: calc(-1 * var(--overhang));
	}
}

:is(ul, ol) ul {
	padding-block: 0.25em;
	padding-inline-start: calc(1.25 * var(--MIN-CONTENT-PADDING));
}

dl {
	display: grid;
	grid-template: "dt dd" / auto 1fr;
	gap: 0 0.4em;
	font-size: var(--FONT-SIZE--SMALL);
}

dt {
	font-weight: 600;
}

dd {
	margin: 0;
}

/* Kinda a mixin */
*,
*::before,
*::after,
*::marker {
	--mix-color: currentColor;
	--mix-alpha: 100%;
	--mix: color-mix(
		/* oklch is buggy in Safari for now with this method */
		in srgb,
		var(--mix-color) calc(100% * var(--mix-alpha)),
		transparent
	);
}

ul > li::marker {
	color: var(--mix);
	--mix-alpha: 0.75;
	line-height: 1; /* It uses a diff font */
}

ul ul > li::marker {
	--mix-alpha: 100%;
}

img {
	max-width: 100%;
	height: auto;
}

p > img:only-child {
	display: block;
}

p:has(> img:only-child) {
	margin-inline: calc(-1 * var(--content-padding));
}

figure {
	display: grid;
	position: relative;
	isolation: isolate;
	--padding: var(--MIN-CONTENT-PADDING);
	padding: var(--padding);
	margin: 0;
	container-type: inline-size;

	--content-padding: 0px;

	&::after {
		content: "";
		position: absolute;
		z-index: -1;
		inset-block: calc(-1 * var(--padding));
		inset-inline: 0;
		grid-row: 1 / 99;
		outline: 1px solid;
		border-radius: .3em;
		opacity: 0.5;
	}

	&:not(:has( > figcaption))::after {
		inset-block-end: 0;
	}
}

figcaption {
	font-size: var(--FONT-SIZE--SMALL);
	font-style: italic;
	grid-row: 99;
	margin-block-start: var(--padding);
	padding-block-start: calc(0.5 * var(--MIN-CONTENT-PADDING));
	text-wrap: balance;

	& > p {
		margin: 0;
	}
}


pre {
	max-width: 100cqw;
	padding: var(--MIN-CONTENT-PADDING);
	margin-block: var(--MIN-CONTENT-PADDING);
	box-shadow: 0 0.1em 0.7rem -0.5rem var(--CODE-SHADOW);
	font-size: 0.88em;
	line-height: 1.5;
}

figure > pre {
	margin-block-end: 0;
	margin-inline: min(calc(-1 * var(--padding)), 0px);
	border-radius: 0;
}

figure > *:nth-last-child(1 of :not(style, figcaption)) {
	margin-block-end: 0;
}

figure > pre:nth-last-child(1 of :not(style, figcaption)) {
	margin-block-end: min(calc(-1 * var(--padding)), 0px);
	border-end-start-radius: calc(.3em + 1px);
	border-end-end-radius: calc(.3em + 1px);
}

figure > pre:nth-child(1 of :not(style)) {
	margin-block-start: min(calc(-1 * var(--padding)), 0px);
	border-start-start-radius: calc(.3em + 1px);
	border-start-end-radius: calc(.3em + 1px);
}

pre{color:#657b83;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;word-wrap:normal;overflow:auto;border-radius:.3em;background-color:#fdf6e3;& ::selection{background:#073642}}.token{&.cdata,&.comment,&.doctype,&.prolog{color:#93a1a1}&.punctuation{color:#586e75}&.namespace{opacity:.7}&.boolean,&.constant,&.deleted,&.number,&.property,&.symbol,&.tag{color:#268bd2}&.attr-name,&.builtin,&.char,&.inserted,&.selector,&.string,&.url{color:#2aa198}&.entity{color:#657b83;background:#eee8d5}&.atrule,&.attr-value,&.keyword{color:#859900}&.class-name,&.function{color:#b58900}&.important,&.regex,&.variable{color:#cb4b16}&.bold,&.important{font-weight:700}&.italic{font-style:italic}&.entity{cursor:help}}@media(prefers-color-scheme:dark){pre{color:#839496;background:#002b36;& ::selection{background:#073642}}.token{&.attr-name,&.cdata,&.comment,&.doctype,&.prolog{color:#93a1a1}&.punctuation{color:#657b83}&.boolean,&.constant,&.deleted,&.number,&.property,&.symbol{color:#d33682}&.attr-value,&.builtin,&.char,&.entity,&.inserted,&.selector,&.string,&.url{color:#2aa198}&.atrule,&.keyword{color:#859900}&.function,&.tag{color:#268bd2}&.important,&.regex,&.variable{color:#cb4b16}}}

[class*='require-']::before {
	content:
		"\26A0 \FE0F Â Your browser does not support `"
		var(--require-anchor-name,
			var(--require-animation-range,
				var(--require-timeline-scope,
					var(--require-at-scope,
						var(--require-style-queries)))))
		'`';
	display: block;
	border: 2px dashed #FFCA51;
	padding: 8px;
	margin-block-end: 16px;
	text-align: center;
}

.require-at-scope {
	--require-at-scope: '@scope';
}

.require-style-queries {
	--require-style-queries: '@container style(--variable)';
}

@scope (html) {
	.require-at-scope {
		--require-at-scope: initial;
	}
}

@container not style(--foo: 1) {
	.require-style-queries::before {
		--require-style-queries: initial;
	}
}

@supports not (anchor-name: --foo) {
	.require-anchor-name {
		--require-anchor-name: 'anchor-name';
	}
}

@supports not (anchor-name: --foo) {
	.require-anchor-name {
		--require-anchor-name: 'anchor-name';
	}
}

@supports not (animation-range: entry-crossing) {
	.require-animation-range {
		--require-animation-range: 'animation-range';
	}
}

@supports not (timeline-scope: --foo) {
	.require-timeline-scope {
		--require-timeline-scope: 'timeline-scope';
	}
}

@supports not (opacity: round(5, 2)) {
	.require-round {
		--require-timeline-scope: 'round()';
	}
}
