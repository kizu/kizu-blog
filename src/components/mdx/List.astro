---
import ScrollMarkers from '@components/ScrollMarkers.astro';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'ul'> {}

let html = (await Astro.slots.render('default')).replaceAll(/<aside[^>]*>(?!<ul>).+(<ul)/g, '$1').replaceAll(/(<\/ul>)\s*.+<\/aside>/g, '$1');

const props = Astro.props;

const hashCount = [...html.matchAll(/<li[^>]+><a href="#/g)].length;
const nonHashCount = [...html.matchAll(/<a href="[^#]/g)].length;
const isToC = hashCount >= 2 && !nonHashCount;

if (isToC) {
	let i = 1;
	html = html.replaceAll('<li', () => `<li style="--i:${i++}"`)
}

---

{isToC
	? (
		<aside class="scroll-markers-toc">
			<details open>
				<summary><u>Table of Contents</u></summary>
				<ScrollMarkers>
					<ul {...props} set:html={html} />
				</ScrollMarkers>
			</details>
		</aside>
	)
	: <ul {...props} set:html={html} />
}
