---
import type { HTMLAttributes } from 'astro/types';
import { classNames } from '@lib/classNames';

interface Props extends HTMLAttributes<'a'> {}

const html = await Astro.slots.render('default');

const { class: className, ...props } = Astro.props;

const extraClasses: string[] = [];

// If the text content of the link starts and ends with the quotes,
// wrap the contens with a `<u>` to enable a better link display.
const modifiedHTML =
	html?.replace(/^([“‘\(]?)(.+?)([”’\)]?)$/, (m, p1, p2, p3) => {
		if (!p1 && !p3) {
			return m;
		}
		if (p1) {
			extraClasses.push('has-left-overhang')
		}
		if (p3) {
			extraClasses.push('has-right-overhang')
		}
		return `${p1}<u>${p2}</u>${p3}`;
	});

---

<a
	{...props}
	class={classNames(className, extraClasses)}
	set:html={modifiedHTML}
/>
