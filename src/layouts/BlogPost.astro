---
import type { CollectionEntry } from 'astro:content';
import Base from '@layouts/Base.astro';
import FormattedDate from '@components/FormattedDate.astro';
import { tagInURL } from '@lib/tagInURL';
import { SITE_TITLE } from '@consts';
import { getAllTags } from '@lib/getAllTags';
import { getMusicTag } from "@lib/getMusicTag";
import { getAllMusic } from '@lib/getAllMusic';

type Props = Partial<CollectionEntry<'blog'>['data']>;

const {
	title = SITE_TITLE,
	pubDate,
	updatedDate,
	heroImage,
	current,
	tags = [],
} = Astro.props;
const { pathname } = Astro.url;

const allTags = await getAllTags();
const allMusic = await getAllMusic();

---
<Base bodyClass="h-entry" {...Astro.props}>
	<article class="e-content scroll-markers-content">
		{heroImage && <img width={720} height={360} src={heroImage} alt="" />}
		{pathname !== '/' ? <>
			<h1 class="p-name">{title}</h1>
			<dl>
				{pubDate ? (<>
					<dt>Published on:</dt>
					<dd><a
						class="u-url u-uid is-inherited"
						href={Astro.url}
						aria-description="This post’s permalink."
					><FormattedDate class="dt-published" date={pubDate} /></a></dd>
				</>) : null }
				{updatedDate ? (<>
					<dt>Last updated on:</dt><dd><FormattedDate class="dt-updated" date={updatedDate} /></dd>
				</>) : null }
				{tags.length ?(<>
					<dt>Categories:</dt>
					<dd>{tags.map((tag: string, index: number) => {
						const tagCount = allTags.get(tag)?.length;
						return (
							<>
								{index !== 0 ? ', ' : null}
								{tagCount && tagCount > 1
									? <a href={`/tags/${tagInURL(tag)}`} class="p-category">{tag}<sup class="nou"><span>&VeryThinSpace;{tagCount}</span></sup></a>
									: <span class="p-category">{tag}</span>
								}
							</>
						)
					})}</dd>
				</>) : null }
				{current ? Object.entries(current).filter(([_, value]) => value !== '').map(([key, _value]) => {
					let value = _value as string;
					if (key === 'music') {
						const [musicArtist, musicValue] = getMusicTag(value) || [];
						if (musicArtist) {
							const artistCount = allMusic.get(musicArtist)?.length;
							if (artistCount && artistCount > 1) {
								value = (<>
									<a href={`/music/${tagInURL(musicArtist)}`}>{musicArtist}</a>{musicValue ? ` — ${musicValue}` : ''}
								</>);
							}
						}
					}
					return (<>
						<dt>Current {key}:</dt>
						<dd>{value}</dd>
					</>)
				}) : null}
			</dl>
		</> : null}
		<slot />
	</article>
</Base>
